{"/about":{"title":"About Ishara.tech","data":{"":"Welcome to Ishara.tech, where technology meets innovation. We are a passionate team dedicated to building smart solutions that simplify complex problems and help businesses thrive in the digital age.","who-we-are#Who We Are":"Ishara.tech is a group of engineers, designers, and tech enthusiasts who share a common goal: to create impactful software and digital products. We leverage the latest technologies to provide robust and scalable solutions that empower businesses and enhance user experiences.","our-mission#Our Mission":"Our mission is to deliver high-quality tech solutions that bridge the gap between ideas and reality. We believe in innovation, creativity, and efficiency. By working closely with our clients, we ensure that our solutions are tailored to their needs and drive their success.","what-we-do#What We Do":"Custom Software Development: We design and develop software that addresses your unique challenges, tailored to meet your specific requirements.\nWeb and Mobile Applications: We create intuitive web and mobile applications that are both aesthetically pleasing and highly functional.\nTechnology Consulting: We provide expert advice to help businesses make informed decisions about technology strategies and digital transformation.\nScalable System Solutions: We build systems that are optimized for scalability, reliability, and performance to handle growing user demands.","why-choose-us#Why Choose Us?":"Client-Focused Approach: We work collaboratively with our clients, valuing transparency and communication to ensure project success.\nTechnical Expertise: Our team brings deep knowledge in software engineering, database management, cloud solutions, and more.\nPassion for Innovation: We stay ahead of the curve by adopting the latest technologies and development methodologies.","get-in-touch#Get in Touch":"We love connecting with businesses and individuals looking to make their tech dreams a reality. If you have a project in mind or want to learn more about our services, contact us.Letâ€™s shape the future together."}},"/auth/create-user":{"title":"Create a User API","data":{"":"This API endpoint allows you to create a new user in the system.","endpoint#Endpoint":"POST /api/users","payload-structure#Payload Structure":"Below is the structure of the JSON payload required for creating a new user:\nField\tType\tDescription\tusername\tstring\tThe unique username for the user.\temail\tstring\tThe user's email address.\tpassword\tstring\tThe password for the new account.\tfirstName\tstring\tThe user's first name.\tlastName\tstring\tThe user's last name.\trole\tstring\tThe role assigned to the user (e.g., admin, user).","example-request-payload#Example Request Payload":"{\n\"username\": \"john_doe\",\n\"email\": \"john.doe@example.com\",\n\"password\": \"securePassword123\",\n\"firstName\": \"John\",\n\"lastName\": \"Doe\",\n\"role\": \"user\"\n}","response-structure#Response Structure":"The following table outlines the structure of the response after a successful user creation:\nField\tType\tDescription\tid\tstring\tUnique identifier for the newly created user.\tusername\tstring\tThe username of the created user.\temail\tstring\tThe email of the created user.\tfirstName\tstring\tThe first name of the user.\tlastName\tstring\tThe last name of the user.\trole\tstring\tThe role assigned to the user.\tcreatedAt\tstring\tTimestamp of when the user was created.","example-response#Example Response":"{\n\"id\": \"12345\",\n\"username\": \"john_doe\",\n\"email\": \"john.doe@example.com\",\n\"firstName\": \"John\",\n\"lastName\": \"Doe\",\n\"role\": \"user\",\n\"createdAt\": \"2024-11-16T12:34:56Z\"\n}","argument-types#Argument Types":"Here is a table summarizing the argument types for better clarity:\nArgument\tType\tRequired\tDescription\tusername\tstring\tYes\tThe unique identifier for the user.\temail\tstring\tYes\tThe user's email.\tpassword\tstring\tYes\tPassword for the new account.\tfirstName\tstring\tNo\tThe user's first name.\tlastName\tstring\tNo\tThe user's last name.\trole\tstring\tNo\tThe role to assign the user.","notes#Notes":"Ensure that passwords are strong and follow security guidelines.\nFields like email must be unique, and validation is performed on the server side."}},"/auth":{"title":"Authentication Overview","data":{"":"Welcome to the authentication section of our API documentation. This part of the documentation covers the endpoints and methods used for user authentication, ensuring secure access to our services.","purpose#Purpose":"Authentication is a crucial part of any application to safeguard user data and provide secure access to various resources. This documentation helps you understand how to implement and use our authentication mechanisms effectively.","available-endpoints#Available Endpoints":"Below are the primary endpoints covered in this section:\nLogin: Authenticate users and retrieve a token.\nRegister: Create new user accounts.\nRefresh Token: Obtain a new token when the current one is expired or about to expire.\nLogout: Invalidate the current session to prevent further access.","authentication-flow#Authentication Flow":"Register: A new user signs up with their credentials.\nLogin: The user provides their credentials to receive an authentication token.\nUse Token: The token is used in subsequent API requests as an authorization header.\nRefresh Token: If the token is close to expiring, the user can request a new one without logging in again.\nLogout: The user logs out to invalidate the token and end the session.","security-measures#Security Measures":"Token-Based Authentication: The API uses JWT (JSON Web Token) for secure and stateless authentication.\nSecure Password Handling: Passwords are never stored in plaintext and are hashed before being stored.\nHTTPS: Ensure all API interactions are over HTTPS to prevent data interception.","how-to-get-started#How to Get Started":"To get started with authentication:\nVisit the Register Endpoint Documentation for user sign-up details.\nProceed to the Login Endpoint Documentation to understand how to authenticate and obtain tokens.\nLearn how to Refresh Tokens to maintain session continuity.\nExplore the Logout Endpoint to securely end user sessions.\n\nEnsure you review each endpoint's specific payload, response, and authentication requirements in the detailed pages.Continue to Authentication API Endpoints"}},"/auth/reset-password":{"title":"Forget Password API","data":{"":"This API endpoint allows users to initiate the password reset process by requesting a password reset link.","endpoint#Endpoint":"POST /api/users/forgot-password","payload-structure#Payload Structure":"Below is the structure of the JSON payload required for initiating the password reset process:\nField\tType\tDescription\temail\tstring\tThe email address of the user requesting the reset.","example-request-payload#Example Request Payload":"{\n\"email\": \"john.doe@example.com\"\n}","response-structure#Response Structure":"The following table outlines the structure of the response after a successful password reset request:\nField\tType\tDescription\tmessage\tstring\tA confirmation message indicating the email was sent.","example-response#Example Response":"{\n\"message\": \"If the email exists in our system, a password reset link has been sent.\"\n}","argument-types#Argument Types":"Here is a table summarizing the argument types for better clarity:\nArgument\tType\tRequired\tDescription\temail\tstring\tYes\tThe email address of the user.","notes#Notes":"The email address provided must be associated with an existing account.\nFor security reasons, the response message does not indicate whether the email exists in the system."}},"/auth/sign-in":{"title":"Sign-In User API","data":{"":"This API endpoint allows users to sign in to the system by providing their credentials.","endpoint#Endpoint":"POST /api/users/sign-in","payload-structure#Payload Structure":"Below is the structure of the JSON payload required for signing in a user:\nField\tType\tDescription\temail\tstring\tThe email address of the user.\tpassword\tstring\tThe password for the user's account.","example-request-payload#Example Request Payload":"{\n\"email\": \"john.doe@example.com\",\n\"password\": \"securePassword123\"\n}","response-structure#Response Structure":"The following table outlines the structure of the response after a successful sign-in:\nField\tType\tDescription\ttoken\tstring\tA JWT token for authenticating subsequent requests.\tuser\tobject\tAn object containing basic user information.","user-object-structure#User Object Structure":"Field\tType\tDescription\tid\tstring\tUnique identifier for the user.\tusername\tstring\tThe username of the signed-in user.\temail\tstring\tThe email address of the signed-in user.\tfirstName\tstring\tThe first name of the user.\tlastName\tstring\tThe last name of the user.","example-response#Example Response":"{\n\"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n\"user\": {\n\"id\": \"12345\",\n\"username\": \"john_doe\",\n\"email\": \"john.doe@example.com\",\n\"firstName\": \"John\",\n\"lastName\": \"Doe\"\n}\n}","argument-types#Argument Types":"Here is a table summarizing the argument types for better clarity:\nArgument\tType\tRequired\tDescription\temail\tstring\tYes\tThe email address of the user.\tpassword\tstring\tYes\tThe password for the user's account.","notes#Notes":"The email and password must match an existing account in the system.\nA JWT token is returned upon successful authentication, which should be used for authorized requests."}},"/":{"title":"Introduction","data":{"":"Welcome to our API documentation!","about-me#About Me":"I am a backend developer specializing in building robust and scalable systems. My work focuses on creating efficient server-side logic, optimizing database performance, and ensuring seamless data flow across different services.","purpose-of-this-documentation#Purpose of This Documentation":"This site provides detailed information about the APIs I've developed to assist frontend developers in integrating their interfaces with our backend services efficiently. By following this documentation, frontend developers will be able to:\nUnderstand the structure and usage of various API endpoints.\nIntegrate their front-end applications with the backend seamlessly.\nAccess comprehensive examples, response structures, and tips for common issues.\n\nFeel free to explore the sections to learn more about each available endpoint and its features.","getting-started#Getting Started":"To get started, you can visit the sections on specific endpoints or read through some examples to see how to make the most out of our API.Explore the API Documentation"}}}